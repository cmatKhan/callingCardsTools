import pysam
from callingcardstools.general import add_read_group_and_tags,bam_to_cc_bed

def test_yeast_add_read_group_and_tags(tmp_path):
    bampath_in = "tests/test_data/add_read_group_test.bam"
    genome_path = "tests/test_data/NC_001133.9_1_60000.fasta"
    genome_index_path = genome_path +".fai"
    
    # see https://docs.pytest.org/en/4.6.x/tmpdir.html
    d = tmp_path / "sub"
    d.mkdir()
    bampath_out = str(d / "out.bam")

    id_length = 34
    insertion_length = 1

    add_read_group_and_tags(bampath_in, bampath_out, genome_path, 
    genome_index_path, id_length, insertion_length)

    expected_dict = {
        "NB501801:571:HNM3KAFX3:2:21105:24619:7841_TTGCGAATTCACTACGTCAACAACCTGTTTTCGA": 
        {"RG": "TTGCGAATTCACTACGTCAACAACCTGTTTTCGA", "XI": 32765, "XZ": "C"},

        "NB501801:571:HNM3KAFX3:1:11312:1357:3858_TTGCGAATTCACTACGTCAACAACCTGTTTTCGA": 
        {"RG": "TTGCGAATTCACTACGTCAACAACCTGTTTTCGA", "XI": 32992, "XZ": "T"},

        "NB501801:571:HNM3KAFX3:4:21612:4799:3141_TTGCGAATTCACTACGTCAACAACCTGTTTTCGA": 
        {"RG": "TTGCGAATTCACTACGTCAACAACCTGTTTTCGA", "XI": 56908, "XZ": "T"},

        "NB501801:571:HNM3KAFX3:1:11102:19076:17266_TTGCGAATTCACTACGTCAACAACCTGTTTTCGA": 
        {"RG": "TTGCGAATTCACTACGTCAACAACCTGTTTTCGA", "XI": 57418, "XZ": "G"},

        "NB501801:571:HNM3KAFX3:2:21206:2348:1221_TTGCGAATTCACTACGTCAACAACCTGTTTTCGA": 
        {"RG": "TTGCGAATTCACTACGTCAACAACCTGTTTTCGA", "XI": 32780, "XZ": "G"},

        "NB501801:571:HNM3KAFX3:3:11501:15818:8474_TTGCGAATTCACTACGTCAACAACCTGTTTTCGA": 
        {"RG": "TTGCGAATTCACTACGTCAACAACCTGTTTTCGA", "XI": 4644, "XZ": "A"},

        "NB501801:571:HNM3KAFX3:1:21310:11840:5050_TACTCAATTCACTACGTCAACAACGCACGCTCGA": 
        {"RG": "TTGCGAATTCACTACGTCAACAACCTGTTTTCGA", "XI": 1, "XZ": "*"},

        "NB501801:571:HNM3KAWER:1:21310:11840:5050_TACTCAATTCACTACGTCAACAACGCACGCTCGA": 
        {"RG": "TTGCGAATTCACTACGTCAACAACCTGTTTTCGA", "XI": 59999, "XZ": "*"},

        "NB501801:571:HNM3KAFX3:4:21409:11423:19883_GAATCAATTCACTACGTCAACATTTTTCTATCGA":
        {"RG": "GAATCAATTCACTACGTCAACATTTTTCTATCGA", "XI": "*", "XZ": "*"}
        
    }

# no clipping reads
## NB501801:571:HNM3KAFX3:2:21105:24619:7841_TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	16	NC_001133.9	32679	60	88M	*	0	0	AAAGGCAGCTAACCTGGGCGGCGTGGCAGTATCCGGTCTGGAAATGGCTCAGAATTCTCAAAAAGTAACTTGGACTGCCGAGCGGGTC	<AAAEEEAEEEEEAAAAA<<<A<<AEA<EAEEE<EAEEEAEEEEAEAEEEEEE<EEEEEEEEEEE/EEAAEEEEEEEEEEEEEEEEEE	NM:i:0	MD:Z:88	AS:i:88	XS:i:0	RG:Z:TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	XI:i:32766	XZ:Z:G
## NB501801:571:HNM3KAFX3:1:11312:1357:3858_TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	0	NC_001133.9	32992	60	88M	*	0	0	TAATCTACTTTTAATTTACTATGCAAATAGGGTTCAGCATTACGGAAGAAACTGAAATCCCTTCCGCGGAAGTTTCTTAGTAGTGGCC	EEEEEEEEEEEAAEE/EEEEEEEEEAEEEAEEEEEAEE<EAEEEEAEEEEEEEEAEA/EEAAEEAEAEA<EEEAE/E/A<A//</6E<	NM:i:0	MD:Z:88	AS:i:88	XS:i:0	RG:Z:TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	XI:i:32990	XZ:Z:G

# reads clipped on the 3' side -- should not be adjusted
## NB501801:571:HNM3KAFX3:4:21612:4799:3141_TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	16	NC_001133.9	56846	60	24S64M	*	0	0	ACCGCTCTTCCGATCTACCTGTTTTCGACGTACCATGGCTATAACTTTCCTTATGTTGTTTGCTTAGTTTTTTGATATTAGTGTTGCT	AAEAEAE/<A<AEAAE<<EEEEEEEEEEA<EAEAEEEAEEEAAEEEAEEEEEEEEEEEEEEAEEEEEEEEEAEEEEEEEEEEEEEEEE	NM:i:0	MD:Z:64	AS:i:64	XS:i:0	RG:Z:TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	XI:i:56909	XZ:Z:T
## NB501801:571:HNM3KAFX3:1:11102:19076:17266_TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	0	NC_001133.9	57419	60	40M48S	*	0	0	GTTCTCAGTGACCAAATAAAGAAACTTATATATGTTCCGGGCGCTCGAAAACAGGTAGATCGGAAGAGCGGTTCAGCAGGAATGCCGA	EEEEEEEEEEEEEEEEEAEEEEEEEEEEEAE/EEEEEEEEEEEEEEEEE<EEEEEEEEEEEEAEEEEEAEAEEEEEEEEAEEEAEE<E	NM:i:0	MD:Z:40	AS:i:40	XS:i:0	RG:Z:TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	XI:i:57417	XZ:Z:G

# reads clipped on the 5' side -- should be adjusted
## NB501801:571:HNM3KAFX3:2:21206:2348:1221_TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	16	NC_001133.9	32694	60	75M13S	*	0	0	GGGCGGCGTGGCAGTATCCGGTCTGGAAATGGCTCAGAATTCTCAAAAAGTAACTTGGACTGCCGAGCGGGTCGAGGGGCTCCGGATT	A/AA<6EAAA/E<<EE/EA</E<E//EEE<<EEEEE<EEAEEAEEEEEE//EEE/E<EEEAAEEEE<EEEE/EEEE6<EEEEEEEEEA	NM:i:0	MD:Z:75	AS:i:75	XS:i:0	RG:Z:TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	XI:i:32781	XZ:Z:A
## NB501801:571:HNM3KAFX3:3:11501:15818:8474_TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	0	NC_001133.9	4654	60	9S79M	*	0	0	CGGAGCCCCTCGACAAAGTTAATATTATGGTGGTAGTATCTCAAATATCTGGATAACCAGATCGTACATCTCTGATAAACAATCTTTG	EEEEEEEEEEEEEEEEEEEEEEEEEAEEAEEEEEEEEEEEEEEEEEEAEEEEEEEEEEEE<EEEEEEEEEEEAAEEEEEEEEAAE<AE	NM:i:0	MD:Z:79	AS:i:79	XS:i:0	RG:Z:TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	XI:i:4643	XZ:Z:A

# annotation taken from another chr and put on chr1 arbitrarily to test what happens when the read starts at index 1
# purpose is to test behavior of left end of chrom
## NB501801:571:HNM3KAFX3:1:21310:11840:5050_TACTCAATTCACTACGTCAACAACGCACGCTCGA	0	NC_001133.9	1	0	49M31S	*	0	0	AAATAGCCCTCATGTACGTCTCCTCCAAGCCCTGTTGTCTCTTACCCGGGCGCTCGAGCGTGCGTAGATCGGAGAGCAGT	EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAEEEEEEEEEEEEEEEEEEEEEAE<EEAEEAEAE</AAAEEEAAEEAE	NM:i:0	MD:Z:49	AS:i:49	XS:i:49
# same as above, but this time with clipping
## NB501801:571:HNM3KAFX3:4:21409:11423:19883_GAATCAATTCACTACGTCAACATTTTTCTATCGA	0	NC_001133.9	1	0	35S45M	*	0	0	ATCTCGTTGCTAGCGATCTGACGCCAACCCTTTTTCCGGCTTTCTGACCGAAATTAAAAAAAAAAAATGAAAATGAAACC	EEEEEEEEEEEEEEEEEEEEEEEEEEEEAEEEEEEEEEEAEAEEEEEEAEEEEAEEEEEEEEEEEEA<<EEE/AAE//E<	NM:i:0	MD:Z:45	AS:i:45	XS:i:45	SA:Z:NC_001139.9,677738,+,39M41S,0,0;

# this is made by copying the line above and adjusting the flag, cigarstring, end point and the name to make it unique.
# purpose is to test behavior at right end of chrom
## NB501801:571:HNM3KAWER:1:21310:11840:5050_TACTCAATTCACTACGTCAACAACGCACGCTCGA	16	NC_001133.9	1	59943	49M31S	*	0	0	AAATAGCCCTCATGTACGTCTCCTCCAAGCCCTGTTGTCTCTTACCCGGGCGCTCGAGCGTGCGTAGATCGGAGAGCAGT	EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAEEEEEEEEEEEEEEEEEEEEEAE<EEAEEAEAE</AAAEEEAAEEAE	NM:i:0	MD:Z:75	AS:i:75	XS:i:75

    test_bam = pysam.AlignmentFile(bampath_out)

    for read in test_bam.fetch():
        for tag in ['RG', 'XI', 'XZ']:
            try:
                assert(read.get_tag(tag) == expected_dict[read.query_name][tag])
            except AssertionError as err:
                print(f"error in {read.query_name} on tag: {tag}.\n {err}")


def test_human_add_read_group_and_tags(tmp_path):
    
    bampath_in = "tests/test_data/add_read_group_human_test.bam"
    genome_path = "tests/test_data/chr1_grch38_1_8793000.fasta"
    genome_index_path = genome_path +".fai"
    
    # see https://docs.pytest.org/en/4.6.x/tmpdir.html
    d = tmp_path / "sub"
    d.mkdir()
    bampath_out = str(d / "out.bam")

    id_length = 14
    insertion_length = 4

    add_read_group_and_tags(bampath_in, bampath_out, genome_path, 
    genome_index_path, id_length, insertion_length)

    expected_dict = {
        "MN00200:583:000H3LYJT:1:23107:6974:3873_CTTTCTAGGGTTAA": 
        {"RG": "TTGCGAATTCACTACGTCAACAACCTGTTTTCGA", "XI": 810644, "XZ": "TTAA"},

        "MN00200:583:000H3LYJT:1:21107:15107:7829_CTTTCTAGGGTTAA": 
        {"RG": "TTGCGAATTCACTACGTCAACAACCTGTTTTCGA", "XI": 838288, "XZ": "TTAA"},

        "MN00200:583:000H3LYJT:1:23102:16971:12434_CTTTCTAGGGTTAA": 
        {"RG": "TTGCGAATTCACTACGTCAACAACCTGTTTTCGA", "XI": 8792786, "XZ": "TTAA"},

        "MN00200:583:000H3LYJT:1:23107:1140:2870_CTTTCTAGGGTTAA": 
        {"RG": "TTGCGAATTCACTACGTCAACAACCTGTTTTCGA", "XI": 3015653, "XZ": "TTAA"}
    }

    # no clipping
    ## MN00200:583:000H3LYJT:1:23107:6974:3873_CTTTCTAGGGTTAA	0	chr1	810645	0	40M	*	0	0	GCACCAACCACATACACTGTTAACACATTTAACTGGAACC	FFFFFF/FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF	PG:Z:novoalign	AS:i:0	UQ:i:0	NM:i:0	MD:Z:40	ZS:Z:R	NH:i:5	HI:i:1	IH:i:1	XP:Z:TAG	XJ:Z:CCTACCAAAG	XK:Z:TATGTTTA	XQ:Z:CTTTCTAGGGTTAA	XI:Z:chr1|810640|810644|+	XZ:Z:TTAA	GS:Z:+
    ## MN00200:583:000H3LYJT:1:21107:15107:7829_CTTTCTAGGGTTAA	16	chr1	838250	30	40M	*	0	0	GAACAATTAAGAGTGGGTGAAATGGTAGACTAGATAGAAC	FFFFFFFFFFFFFFFFFFFFFFFFFFFF=FFFFFFFFFFF	PG:Z:novoalign	AS:i:0	UQ:i:0	NM:i:0	MD:Z:40	XP:Z:TAG	XJ:Z:CCTACCAAAG	XK:Z:TATGTTTA	XQ:Z:CTTTCTAGGGTTAA	XI:Z:chr1|838289|838293|-	XZ:Z:TTAA	GS:Z:-
    
    # clipped reads
    ## MN00200:583:000H3LYJT:1:23102:16971:12434_CTTTCTAGGGTTAA	0	chr1	8792788	70	1S39M	*	0	0	AAGTGTCTTACATCGGGTATGTTTCTCAATATTAGGAAGG	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF	PG:Z:novoalign	AS:i:30	UQ:i:30	NM:i:0	MD:Z:39	XP:Z:TAG	XJ:Z:CCTACCAAAG	XK:Z:TATGTTTA	XQ:Z:CTTTCTAGGGTTAA	XI:Z:chr1|8792782|8792786|+	XZ:Z:TTAA	GS:Z:+
    ## MN00200:583:000H3LYJT:1:23107:1140:2870_CTTTCTAGGGTTAA	16	chr1	3015615	70	37M3S	*	0	0	TGTGGACTGAATGTTCCCCTGCTGTCCTCTGTGAAGCTGT	FFFFFFAFFFFFFFFFFFFFFFFFFFFFFFFFF/FFFFFF	PG:Z:novoalign	AS:i:30	UQ:i:30	NM:i:0	MD:Z:37	XP:Z:TAG	XJ:Z:CCTACCAAAG	XK:Z:TATGTTTA	XQ:Z:CTTTCTAGGGTTAA	XI:Z:chr1|3015654|3015658|-	XZ:Z:TTAA	GS:Z:-

    test_bam = pysam.AlignmentFile(bampath_out)

    for read in test_bam.fetch():
        for tag in ['RG', 'XI', 'XZ']:
            try:
                assert(read.get_tag(tag) == expected_dict[read.query_name][tag])
            except AssertionError as err:
                print(f"error in {read.query_name} on tag: {tag}.\n {err}")

def test_count_hops():
    # these should be excluded if require_exact_map is true
    #NB501801:571:HNM3KAFX3:1:11302:18242:19021_GAATCAATTCACTACGTCAACAGGCGGCAGTCGA	16	NC_001133.9	1465	60	28S52M	*	0	0	ACCGCTCTTCCGATCTGGCGGCAGTCGAGCGCCAAAAAATGAAAAACGAAGCAGCGGCTCATTTTTATTTAAGGACAAAG	EEEAEEEEEAA/<EAAAA<<E<AAEEAEA/<E<//EEAEEEEEEEEEAE<EAEEEAEEEEEEEEEAEEEEEEEEEEAEEE	NM:i:1	MD:Z:28A23	AS:i:47	XS:i:0	RG:Z:GAATCAATTCACTACGTCAACAGGCGGCAGTCGA	XI:i:1515	XZ:Z:G
    #NB501801:571:HNM3KAFX3:1:21105:15364:11583_TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	16	NC_001133.9	1465	60	24S56M	*	0	0	CTCTTCCGATCTACCTGTTTTCGAGCGCCAAAAAATGAAAAACGAAGCAGCGACTCATTTTTATTTAAGGACAAAGGTTG	//AE/AEEE<EA/<<EEEEAEE/E/EEEAEEEEE/AAEEEEAA///EEAEEEAAE<EEEEEAAEEEAE<EEEE/AEE/EE	NM:i:0	MD:Z:56	AS:i:56	XS:i:37	RG:Z:TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	XI:i:1519	XZ:Z:C
    #NB501801:571:HNM3KAFX3:1:21109:1968:6358_TTGCGAATTCACTACGTCAACAGGCGGCAGTCGA	16	NC_001133.9	1465	60	28S52M	*	0	0	ACCGCTCTTCCGATCTGGCGGCAGTCGAGCGCCAAAAAATGAAAAACGAAGCAGCGACTCATATTTATTTAAGGACAAAG	A/<AA/E/AEA<</<EE/EA<EEE/<<EEA/A/EEEEEEE/EEEEEE<E/6AEA<EEAEEEAEEEEEAEEEEEEEEEEEE	NM:i:1	MD:Z:34T17	AS:i:47	XS:i:0	RG:Z:TTGCGAATTCACTACGTCAACAGGCGGCAGTCGA	XI:i:1515	XZ:Z:G
    #NB501801:571:HNM3KAFX3:1:21203:3337:5570_CCTGCAATTCACTACGTCAACAACGCACGCTCGA	16	NC_001133.9	1465	60	43S37M	*	0	0	CGGCATTCCTGCTGAACCGCTCTTCCGATCTACGCACGCTCGAGCGCCAAAAAATGAAAAACGAAGCAGCGACTCATTTT	AE/AEEAEEEAAEEEEEEAEEEAAEEAEEEAEEAEEEAEEEEEEEEEE<EAEEEE/EEEEE<EEEEEEEEEEEEEEEEEE	NM:i:0	MD:Z:37	AS:i:37	XS:i:0	RG:Z:CCTGCAATTCACTACGTCAACAACGCACGCTCGA	XI:i:1500	XZ:Z:T
    #NB501801:571:HNM3KAFX3:1:21203:3528:11704_GCTTAAATTCACTACGTCAACAGGCGGCAGTCGA	16	NC_001133.9	1465	60	28S52M	*	0	0	ACCGCTCTTCCGATCTGGCGGCAGTCGAGCGCCAAAAAGTGAAAAACGAAGCGGCGACTCATTTTTATTTAAGGACAAAG	EE/E</E<EEA/E//AA<<<E//A/<EEEEAEEEE<E<EE/EE<EA<EE/AEEAEEEEEEEEEEEEEEEEEEEEEEEEEE	NM:i:2	MD:Z:10A13A27	AS:i:42	XS:i:0	RG:Z:GCTTAAATTCACTACGTCAACAGGCGGCAGTCGA	XI:i:1515	XZ:Z:G
    #NB501801:571:HNM3KAFX3:1:11308:13891:7432_CCTGCAATTCACTACGTCAACATACGGCGTTCGA	16	NC_001133.9	6330	60	46S32M2S	*	0	0	TCTCGGCATTCCTGCTGAACCGCTCTTCCGATCTTACGGCGTTCGAGCGCTTCTTTTGTATCGAACCATTTTATTGCATG	AEEAAAEEEEEEEEEEEEEEAAEEEEEEEEEEEEEEEEEEEAEEEEEEAEE/EEEEEEEEEEEEEEEEEEEEEEEEEEEE	NM:i:0	MD:Z:32	AS:i:32	XS:i:0	RG:Z:CCTGCAATTCACTACGTCAACATACGGCGTTCGA	XI:i:6362	XZ:Z:G
    #NB501801:571:HNM3KAFX3:3:11609:2067:1438_AACACAATTCACTACCACAACAGGTCGTATTCGA	16	NC_001133.9	6438	60	14S42M24S	*	0	0	GTATTCGAGCGCCGGGATTGGTTAGGTTCAGCCATGCCTGGCGCGTACATTGAGGCTTTTGATGTTCCGCAGTTTAATTT	6//A//<<//E//////AE/AA/E6/EEE/<E//EE/EE/A////<//A/AEE/A/AEAAE//</E//6//E66/AEE//	NM:i:0	MD:Z:42	AS:i:42	XS:i:0	RG:Z:AACACAATTCACTACCACAACAGGTCGTATTCGA	XI:i:6502	XZ:Z:T
    #NB501801:571:HNM3KAFX3:3:21404:19659:20125_TACTCAATTCACTACGTCAACAACGCACGCTCGA	16	NC_001133.9	6972	60	60M20S	*	0	0	AAAATTTCTTCAGGACTTGCAAAAAGAATCTAACTGATCTTCGGATGAGCCTTTATCGATGCCGAAATAATTGTTGCATA	EEEEE<EEEEEEAEEAEEAEEEEEEEEEEEEEEAEEEEEEEEEAE/EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE	NM:i:0	MD:Z:60	AS:i:60	XS:i:0	RG:Z:TACTCAATTCACTACGTCAACAACGCACGCTCGA	XI:i:7050	XZ:Z:T
    #NB501801:571:HNM3KAFX3:1:11307:9975:3807_GAATCAATGCACTACGTCAACATTTTTCTATCGA	16	NC_001133.9	14293	60	51M29S	*	0	0	TGTTTAGCGTAGTGATGTTCCCGCGTAGTACTTAGGAAATTTTGGTATCGATCACTTTCGGACTTAAAACTAGGCTTCCG	EEEEA/<<AEEEEAAEEEEEAAAA<AEEEEEEEEAEEEEEEEEEEEEEEEEAEEEEEEEEEEEEAEEEAAEE/EEEEEEE	NM:i:0	MD:Z:51	AS:i:51	XS:i:31	SA:Z:NC_001143.9,457326,-,47S33M,60,0;	RG:Z:GAATCAATGCACTACGTCAACATTTTTCTATCGA	XI:i:14371	XZ:Z:T
    #NB501801:571:HNM3KAFX3:3:11406:26241:4578_GAATCAATTCACTACGTCAACATTTTTCTATCGA	16	NC_001133.9	14293	60	51M29S	*	0	0	TGTTTAGCGTAGTGATGTTCCCGCGTAGTACTTAGGAAATTTTGGTATCGATCACTTTCGGACTTAAAACTAGGCTTCCG	EAEEEEAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE	NM:i:0	MD:Z:51	AS:i:51	XS:i:31	SA:Z:NC_001143.9,457326,-,47S33M,60,0;	RG:Z:GAATCAATTCACTACGTCAACATTTTTCTATCGA	XI:i:14371	XZ:Z:T

    # these should be excluded if require_exact_map is true
    #NB501801:571:HNM3KAFX3:3:11502:5225:16032_AAATCAATTCACTACGTCAACATTTTTCTATCGA	0	NC_001133.9	9472	60	7M1D73M	*	0	0	CATTGGTGATATTCAACAAGATCCGATACCTCCAATTCCGATTTCTACAAATTGTGCTCTACATATTACTGCGATGCAAT	EEEEAEEEEEEEEEEEEEEEE<EEEA<EEEEEAEEAAEEEEAE<EEEE/AEAAEAEEEEAEAEEE//AA<AAAEAE<A<A	NM:i:1	MD:Z:7^G73	AS:i:73	XS:i:0	RG:Z:AAATCAATTCACTACGTCAACATTTTTCTATCGA	XI:i:9471	XZ:Z:A
    #NB501801:571:HNM3KAFX3:2:21201:25365:3530_CCTGCAATTCACTACGTCAACATACGGCGTTCGA	0	NC_001133.9	34653	60	8M1D72M	*	0	0	AGAAAGACACGAGAATCAATAAACGAGGCTAAACTGCGTCACACATGATTGTGATTGAGTACTCACGTTCTCGTGTTAAT	EEEEAEEE/AEEEEEEEEEA/E/EAEE/EEEA6EE/EAEEE</AEEEEEAE/AEE<EEE<EE<EEEE<EEEEAEA<EEEA	NM:i:1	MD:Z:8^T72	AS:i:73	XS:i:0	RG:Z:CCTGCAATTCACTACGTCAACATACGGCGTTCGA	XI:i:34652	XZ:Z:A
    #NB501801:571:HNM3KAFX3:2:11202:11000:8250_GAATCAATTCACTACGTCAACATTTTTCTATCGA	0	NC_001133.9	34805	60	9M1D41M30S	*	0	0	ATATGTACATTATCGAGCCAATCGAGGGCAGCAGTTTAACATCAAGCCGGGCGCTCGATAGAAAAAAGATCGGAAGAGCG	EEEEEEEEEEEEEEEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEA<	NM:i:1	MD:Z:9^T41	AS:i:43	XS:i:0	RG:Z:GAATCAATTCACTACGTCAACATTTTTCTATCGA	XI:i:34804	XZ:Z:C
    #NB501801:571:HNM3KAFX3:1:11106:21154:16529_AATCAATTCACTACGTCAACAATTTTTCTATCGA	0	NC_001133.9	45256	60	8M1D72M	*	0	0	CCCCAACCTTTTTTTTTACTTTTCTTTGGATCTTAGAGATAACAGAAAAAAAGGATGACCCCAATCATTTGCCACGGCAT	EEEEEEEEEEEEEEEEEEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAEEEA<EA<EAEEAAE<AAAAAAEE	NM:i:1	MD:Z:8^T72	AS:i:73	XS:i:19	RG:Z:AATCAATTCACTACGTCAACAATTTTTCTATCGA	XI:i:45255	XZ:Z:A
    #NB501801:571:HNM3KAFX3:3:11408:15634:6755_TACTCAATTCACTACGTCAACAACGCACGCTCGA	0	NC_001133.9	61979	60	7M1D73M	*	0	0	CACTTTGCCCTGGAAAACCCTACCAGAATGCATATGGACATTTTCATGATACTTCTTTGTACGACAAGACTTCGAATTTG	EEEEEEEEEEEEEEEEEEEEEEEEAEEAEEEEEEEEEEEEEEEAEEEEEEEEEEEEEEEEEEAEAEEEEEEEAEAEEEAA	NM:i:1	MD:Z:7^C73	AS:i:73	XS:i:0	RG:Z:TACTCAATTCACTACGTCAACAACGCACGCTCGA	XI:i:61978	XZ:Z:T
    #NB501801:571:HNM3KAFX3:4:11401:11139:6623_TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	0	NC_001133.9	68152	60	3M1D53M24S	*	0	0	CAATTAGGGTTTGAGCACAGCGTTTGGTTGCGACACTTCCCCAGAAGGAAAACCGGGCGCTCGAAAACAGGTAGATCGGA	EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE/EEEEEEEEEEEEEEEEEEEEEEEEEEEE	NM:i:1	MD:Z:3^T53	AS:i:53	XS:i:0	RG:Z:TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	XI:i:68151	XZ:Z:A
    #NB501801:571:HNM3KAFX3:1:21102:10028:3556_TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	0	NC_001133.9	68950	60	3M1D56M1D21M	*	0	0	CCTTCGAATGGTAGTTCTTGGCTAAAATGGGACGGAAACAGTAGGCCGCACAGGTGCATCAGCGAGCACGAGGGCTCAAT	EEEEEEEEEEEEEEEEEEEEEEEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAEEEEEEEEEEEAE<AAE	NM:i:2	MD:Z:3^G56^C21	AS:i:70	XS:i:0	RG:Z:TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	XI:i:68949	XZ:Z:G
    #NB501801:571:HNM3KAFX3:4:11611:22681:19474_TACTCAATTCACTACGTCAACAACGCACGCTCGA	0	NC_001133.9	70907	60	6M1I65M8S	*	0	0	AAAAAAGAAAAAAAAAAAAAAAATAGCCGCCATGACCCCGGATCGGCGGTTGTGATACGGTCAGGGTAGCGCACGCGCGG	EEEEEEEEEEEEEEEEEEEEEEEA//EE/EA<<//EEEA/EA////AE<<////////AE///<EEA//EA//<E///</	NM:i:2	MD:Z:44T26	AS:i:61	XS:i:23	RG:Z:TACTCAATTCACTACGTCAACAACGCACGCTCGA	XI:i:70906	XZ:Z:G
    #NB501801:571:HNM3KAFX3:2:21211:15730:14045_TACTCAATTCACTACGTCAACAACGCACGCTCGA	0	NC_001133.9	71108	60	9M2D71M	*	0	0	GAAAGAAAGAAAAAAAAAATGTACACCCAGACATCGGGCTTCCACAATTTCGGCTCTATTGTTTTCCATCTCTCGCAACG	EEEEEEEEEEEEEEEEEEEEEEAEEEEEAE/EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAEEEEEEEEEAEE	NM:i:2	MD:Z:9^AA71	AS:i:72	XS:i:19	RG:Z:TACTCAATTCACTACGTCAACAACGCACGCTCGA	XI:i:71107	XZ:Z:A
    #NB501801:571:HNM3KAFX3:2:21312:11737:1251_TACTCAATTCACTACGTCAACAACGCACGCTCGA	0	NC_001133.9	71108	60	9M1I70M	*	0	0	GAAAGAAAGAAAAAAAAAAAAATGTACACCCAGACATCGGGCTTCCACAATTTCGGCTCTATTGTTTTCCATCTCTCGCA	EEEEEEEEEEEEEEEEEEEEEEEAEEEEAE///AEAEEEEA/E<EA/AEAEEEAEE//<E/AEAEEE<<6/E////EA/E	NM:i:1	MD:Z:79	AS:i:72	XS:i:22	RG:Z:TACTCAATTCACTACGTCAACAACGCACGCTCGA	XI:i:71107	XZ:Z:A

    # these should be included
    #NB501801:571:HNM3KAFX3:1:11303:19040:17223_CCTGCAATTCACTACGTCAACAGGCGGCAGTCGA	16	NC_001133.9	1475	60	80M	*	0	0	ATGAAAAACGAAGCAGCGACTCATTTTTATTTAAGGACAAAGGTTGCGAAGCCGCACATTTCCAATTTCATTGTTGTTTA	EEAAEEEAA<EAAAAAAAEEAEEEEEEAEAEAEEEEEEEEEEEAEEEEEEEEEAEEEEEEEEEEEEEEEEEEEEEEEEEE	NM:i:0	MD:Z:80	AS:i:80	XS:i:28	RG:Z:CCTGCAATTCACTACGTCAACAGGCGGCAGTCGA	XI:i:1553	XZ:Z:T
    #NB501801:571:HNM3KAFX3:3:21606:21690:18263_GAATCAATTCACTACGTCAACAGGCGGCAGTCGA	16	NC_001133.9	1475	60	80M	*	0	0	ATGAAAAACGAAGCAGCGACTCATTTTTATTTAAGGACAAAGGTTGCGAAGCCGCACATTTCCAATTTCATTGTTGTTTA	<AA</6//<A//EEEA<E/E<EAEEEEEEEEEEEEAE<6EEEEEE<EEEEAEAAA/<EEEE///EEEEEEEEEEEAEEEE	NM:i:0	MD:Z:80	AS:i:80	XS:i:28	RG:Z:GAATCAATTCACTACGTCAACAGGCGGCAGTCGA	XI:i:1553	XZ:Z:T
    #NB501801:571:HNM3KAFX3:3:21609:24219:9982_CCTGCAATTCACTACGTCAACAGGCGGCAGTCAA	16	NC_001133.9	1475	60	80M	*	0	0	ATGAAAAACGAAGCAGCGACTCATTTTTATTTAAGGACAAAGGTTGCGAAGCCGCACATTTCCAATTTCATTGTTGTTTA	<AAEAA<EEEEEA<EAEAEEEEEEEEA/<EAAEA<AEEAAEAAEEEEEAEEAEAEEEEEEEEE/EEEEEEEEEEEEEEEE	NM:i:0	MD:Z:80	AS:i:80	XS:i:28	RG:Z:CCTGCAATTCACTACGTCAACAGGCGGCAGTCAA	XI:i:1553	XZ:Z:T
    #NB501801:571:HNM3KAFX3:4:11607:24523:1285_GAATCAATTCACTACGTCAACAGGCGGCAGTCGA	16	NC_001133.9	1475	60	80M	*	0	0	ATTAAAAACGATGCAGCGACTCATTTTTATTTAAGGACAAAGGTTGCGAAGCCGCACATTTCCAATTTCATTGTTGTTTA	AA/E<</<//A/A//EEAEEEEEEEE/AEE/AEE/EEE/EEAEEEEEE<AE/A<AEEAE6AEEEEAEEEEE/EEEEEEEE	NM:i:2	MD:Z:2G8A68	AS:i:72	XS:i:22	RG:Z:GAATCAATTCACTACGTCAACAGGCGGCAGTCGA	XI:i:1553	XZ:Z:T
    #NB501801:571:HNM3KAFX3:2:11307:8097:13585_TTGCGAATTCATACGTCAACATACCTGTTTTCGA	16	NC_001133.9	1481	60	80M	*	0	0	AACGAAGCAGCGACTCATTTTTATTTAAGGACAAAGGTTGCGAAGCCGCACATTTCCAATTTCATTGTTGTTTATTGGAC	E/<AE<<A<EEEEEEEEEEEE/EEEEEEEEEEE<EEE/EEEEEEEEEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE	NM:i:0	MD:Z:80	AS:i:80	XS:i:23	RG:Z:TTGCGAATTCATACGTCAACATACCTGTTTTCGA	XI:i:1559	XZ:Z:A
    #NB501801:571:HNM3KAFX3:1:21202:16820:17356_TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	16	NC_001133.9	1482	60	80M	*	0	0	ACGAAGCAGCGACTCATTTTTATTTAAGGACAAAGGTTGCGAAGCCGCACATTTCCAATTTCATTGTTGTTTATTGGACA	AEAA<<AAAEEEEEEEAEEAAEEEEEEEEEEEAAEE/EEEEEEEEEEEEEE6EEEEEEEEEEEEEEEEEEAEEEEEEEEE	NM:i:0	MD:Z:80	AS:i:80	XS:i:24	RG:Z:TTGCGAATTCACTACGTCAACAACCTGTTTTCGA	XI:i:1560	XZ:Z:T
    #NB501801:571:HNM3KAFX3:4:11505:8322:9278_GAATCAATTCACTACGTCAACATTTTTCTATCGA	16	NC_001133.9	1603	28	80M	*	0	0	AGTGTAGAAGTTTCTTTCTTATGTTCATCGTATTCATAAAATGCTTCACGAACACCGTCATTGATCAAATAGGTCTATAA	EEAAAAAEEEEEEEEAEEEAEEEEEAEAEEEEEAEEEAEEEAEEEEEEEEEEEEAEEEEEEEEEEEEEEEEEEEEEEEEE	NM:i:0	MD:Z:80	AS:i:80	XS:i:70	XA:Z:NC_001134.8,-7407,80M,2;	RG:Z:GAATCAATTCACTACGTCAACATTTTTCTATCGA	XI:i:1681	XZ:Z:T
    #NB501801:571:HNM3KAFX3:4:11512:17161:3948_GAATCAATTCACTACGTCAACATTTTTCTATCGA	16	NC_001133.9	1603	28	80M	*	0	0	AGTGTAGAAGTTTCTTTCTTATGTTCATCGTATTCATAAAATGCTTCACGAACACCGTCATTGATCAAATAGGTCTATAA	AEEEEEAE/AE<AEEEEEEAEEEEAEEEEEEEEE<AEAAEEEEEEEEEEEEA/EEEEEEEEEEEEEEAEEEEEEEEEEEE	NM:i:0	MD:Z:80	AS:i:80	XS:i:70	XA:Z:NC_001134.8,-7407,80M,2;	RG:Z:GAATCAATTCACTACGTCAACATTTTTCTATCGA	XI:i:1681	XZ:Z:T
    #NB501801:571:HNM3KAFX3:4:21511:18085:9450_GAATCAATTCACTACGTCAACATTTTTCTATCGA	16	NC_001133.9	1603	28	80M	*	0	0	AGTGTAGAAGTTTCTTTCTTATGTTCATCGTATTCATAAAATGCTTCACGAACACCGTCATTGATCAAATAGGTCTATAA	AEEAEEEEEAEEEEAEEEE<EAE6EEEAEEEEEEEEEAAAE/EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE	NM:i:0	MD:Z:80	AS:i:80	XS:i:70	XA:Z:NC_001134.8,-7407,80M,2;	RG:Z:GAATCAATTCACTACGTCAACATTTTTCTATCGA	XI:i:1681	XZ:Z:T
    #NB501801:571:HNM3KAFX3:2:11210:2166:18953_GAATCAATTCACTACGTCAACATTTTTCTATCGA	16	NC_001133.9	1697	34	80M	*	0	0	TATATAATCTACGGTATTTATATCATCAAAAAAAAGTAGTTTTTTTATTTTATTTTGTTCGTTAATTTTCAATTTCTATG	AAEEEE<EEEAAAA/EEEEEEA6EEEEEE<AEAAEEEEEEEEEEEAEEEEEEEEEEEEEEEEE<EEEEEEAEEEAEEEEE	NM:i:0	MD:Z:80	AS:i:80	XS:i:68	XA:Z:NC_001143.9,-1699,27M1D53M,2;NC_001141.2,-8680,43M3D37M,4;NC_001142.9,-8663,43M3D37M,4;	RG:Z:GAATCAATTCACTACGTCAACATTTTTCTATCGA	XI:i:1775	XZ:Z:G

    # these should be counted
    #NB501801:571:HNM3KAFX3:1:11301:8854:18850_GAATCAATTCACTACGTCAACATTTTTCTATCGA	0	NC_001133.9	1469	60	80M	*	0	0	CAAAAAATGAAAAACGAAGCAGCGACTCATTTTTATTTAAGGACAAAGGTTGCGAAGCCGCACATTTCCAATTTCATTGT	EEEEEEEEEEEEEAEEEEEEEEAE/EEEEEEEEEEEEEEEEEAEEEEEEE/A<AEAEE<AAEA/AEEAAEEEAEEAEAAE	NM:i:0	MD:Z:80	AS:i:80	XS:i:0	RG:Z:GAATCAATTCACTACGTCAACATTTTTCTATCGA	XI:i:1468	XZ:Z:C
    #NB501801:571:HNM3KAFX3:3:11403:10731:17749_GAATCAATTCACTACGTCAACATTTTTCTATCGA	0	NC_001133.9	1469	60	80M	*	0	0	CAAAAAATGAAAAACGAAGCAGCGACTCATTTTTATTTAAGGACAAAGGTTGCGAAGCCGCACATTTCCAATTTCATTGT	EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAEAEEEEEAEEEEEEAEAEAEA<AEEEE	NM:i:0	MD:Z:80	AS:i:80	XS:i:0	RG:Z:GAATCAATTCACTACGTCAACATTTTTCTATCGA	XI:i:1468	XZ:Z:C
    #NB501801:571:HNM3KAFX3:3:11410:23534:6765_GAATCAATTCACTACGTCAACATTTTTCTATCGA	0	NC_001133.9	1469	60	80M	*	0	0	CAAAAAATGAAAAACGAAGCAGCGACTCATTTTTATTTAAGGACAAAGGTTGCGAAGCCGCACATTTCCAATTTCATTGT	EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAE/<EEEEE6EEEEE<EE/AEAEEEEEE/A/AA<EAA</AA6AAAA<6E	NM:i:0	MD:Z:80	AS:i:80	XS:i:0	RG:Z:GAATCAATTCACTACGTCAACATTTTTCTATCGA	XI:i:1468	XZ:Z:C
    #NB501801:571:HNM3KAFX3:3:21510:25294:10985_GAATCAATTCACTACGTCAACATTTTTCTATCGA	0	NC_001133.9	1469	60	80M	*	0	0	CAAAAAATGAAAAACGAAGCAGCGACTCATTTTTATTTAAGGACAAAGGTTGCGAAGCCGCACATTTCCAATTTCATTGT	EEAEEAEEEEEEEEEEAEEEEAEAEAEEEEEEEEEEEEEEEEEAEEEEEEEEEAE/EEE<EEEEEEEEEEEEEEA<EAA<	NM:i:0	MD:Z:80	AS:i:80	XS:i:0	RG:Z:GAATCAATTCACTACGTCAACATTTTTCTATCGA	XI:i:1468	XZ:Z:C
    #NB501801:571:HNM3KAFX3:4:21603:23395:11307_GAATCATTCACTACGTCAACACTTTTTCTATCGA	0	NC_001133.9	1470	60	80M	*	0	0	AAAAAATGAAAAACGAAGCAGCGACTCATTTTTATTTAAGGACAAAGGTTGCGAAGCCGCACATTTCCAATTTCATTGTT	EE6AEEE/E/EE/EEEE/<AE/E/EAEE/E<E///A/</AAEAEE/E/<EE<A<EEE<E//</EE/<6</E/A<AAA/AA	NM:i:0	MD:Z:80	AS:i:80	XS:i:0	RG:Z:GAATCATTCACTACGTCAACACTTTTTCTATCGA	XI:i:1469	XZ:Z:C
    #NB501801:571:HNM3KAFX3:1:11311:9411:7837_GAATCAATTCACTACGTCAACATTTTTCTATCGA	0	NC_001133.9	1497	60	80M	*	0	0	ATTTTTATTTAAGGACAAAGGTTGCGAAGCCGCACATTTCCAATTTCATTGTTGTTTATTGGACATACACTGTTAGCTTT	EAE/AEEEEE/EEEEEEEEEEE/EEA<A/6AEEEEEEEE</A<E/<EEE<A/6A/E6AEEEEEE<EEAEEEEEAEAA/AA	NM:i:0	MD:Z:80	AS:i:80	XS:i:43	RG:Z:GAATCAATTCACTACGTCAACATTTTTCTATCGA	XI:i:1496	XZ:Z:C
    #NB501801:571:HNM3KAFX3:4:11610:12173:11888_GAATCAATTCACTACGTCAACATTTTTCTATCGA	0	NC_001133.9	1497	60	80M	*	0	0	ATTTTTATTTAAGGACAAAGGTTGCGAAGCCGCACATTTCCAATTTCATTGTTGTTTATTGGACATACACTGTTAGCTTT	EEEEEEAEEEEEEEEEEEEEEEEEEEEEEEEEEEAEEEAEEAEEEEEEEEEEEEEEEEEEAEEEEEEEEAAEEEEEEAEE	NM:i:0	MD:Z:80	AS:i:80	XS:i:43	RG:Z:GAATCAATTCACTACGTCAACATTTTTCTATCGA	XI:i:1496	XZ:Z:C
    #NB501801:571:HNM3KAFX3:1:11302:26326:10004_GAATCAATTCACTACGTCAACATTTTTCTATCGA	0	NC_001133.9	3241	60	80M	*	0	0	ATGACAGTAGCTTTAGATCAAAAAGGAAAGCATGGAGGGAAACAGTAAACAGTGAAAATTCTCTTGAGAACCAAAGTAAA	EEEEEEEAEAEEEAAEEEEEEEEEAEEAE/AEAEEEAEAE/EE<EEA/EE/</EE<EEEEEEEAEEEEEE<<</AE6A/A	NM:i:0	MD:Z:80	AS:i:80	XS:i:0	RG:Z:GAATCAATTCACTACGTCAACATTTTTCTATCGA	XI:i:3240	XZ:Z:C
    #NB501801:571:HNM3KAFX3:3:11611:25323:4890_GAATCAATTCACTACGGTCAACTTTTTCTATCGA	0	NC_001133.9	3278	60	80M	*	0	0	AGAAACAGTAAACAGTGAAAATTCTCTTGAGAACCAAAGTAAACCTTCATTGAAGAGCTTCCTTAAAAAATTTAGAATCT	EEEEEEEEEEEEEEEEEEEEEEEEEAEEEEEEAEEEEEEEEEAEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE	NM:i:1	MD:Z:0G79	AS:i:79	XS:i:0	RG:Z:GAATCAATTCACTACGGTCAACTTTTTCTATCGA	XI:i:3277	XZ:Z:G
    #NB501801:571:HNM3KAFX3:1:21105:10612:18806_GAATCAATTCACTACGTCAACATTTTTCTATCGA	0	NC_001133.9	3279	60	80M	*	0	0	GAAACAGTAAACAGTGAAAATTCTCTTGAGAACCAAAGTAAACCTTCATTGAAGAGCTTCCTTAAAAAATTTAGAATCTC	EEEEEEEEEEEEEEEAEEEEEEEAEEEEEEEEEEEEEEEEEEEEEEAEEEEAEEEEEEEEAE<EEEEEEEAEAEEEEAEA	NM:i:0	MD:Z:80	AS:i:80	XS:i:0	RG:Z:GAATCAATTCACTACGTCAACATTTTTCTATCGA	XI:i:3278	XZ:Z:G
    
    # problems
    ## this is an otherwise passing read which after adjustment hangs off the end of the chromosome -- shouldn't be counted
    #NB501801:571:HNM3KAFX3:3:11610:14329:12019_GAATCAATTCACTACGTCAACATTTTTCTATCGA	16	NC_001147.6	1091237	26	17S55M8S	*	0	0	TTTCGAGCGCGCGTGTTAGGTATGACAGCGAGAGTAGAGGTAGATGTGTGAGTGTGTGTGGGTGTGGTGTGTGTATATAT	//<///</<<//E/<///////EE/6///A/</E<EE/EA//A//A/E/A/</EAEAEEEEAAEEAE/EEEEEEEEEEEE	NM:i:2	MD:Z:31A3A19	AS:i:45	XS:i:36	RG:Z:GAATCAATTCACTACGTCAACATTTTTCTATCGA	XI:Z:*	XZ:Z:*

    bampath = "tests/test_data/tagged_yeast.bam"
    mapq_filter = 30
    bed_6_3_colnames = ['chrom', 'chromStart', 'chromEnd',
                    'barcode', 'aln_mapq', 'strand',
                    'reads', 'insert_seq', 'aln_flag']

    exact_passing,exact_failing = count_hops(bampath, True, 
               True,
               mapq_filter, 
               bed_6_3_colnames)
    
    exact_map_passing,exact_map_failing = count_hops(bampath, 
               True, 
               False,
               mapq_filter, 
               bed_6_3_colnames)
    
    exact_length_passing,exact_length_failing = count_hops(bampath, 
               False, 
               True,
               mapq_filter, 
               bed_6_3_colnames)
    
    permissive_passing,permissive_failing = count_hops(bampath, 
               False, 
               False,
               mapq_filter, 
               bed_6_3_colnames)



    assert exact_passing.shape == (15,9) and exact_failing.shape == (26,9)

    assert exact_map_passing.shape == (22,9) and exact_map_failing.shape == (19,9)

    assert exact_length_passing.shape == (24,9) and exact_length_failing.shape == (17,9)

    assert permissive_passing.shape == (37,9) and permissive_failing.shape == (4,9)
